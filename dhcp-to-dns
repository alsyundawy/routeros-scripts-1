#!rsc
# RouterOS script: dhcp-to-dns
# Copyright (c) 2013-2020 Christian Hesse <mail@eworm.de>
#
# check DHCP leases and add/remove/update DNS entries

:global Domain;
:global HostNameInZone;
:global Identity;

:global CharacterReplace;
:global LogPrintExit;

:local Zone;
:if ($HostNameInZone = true) do={
  :set Zone ("dhcp." . $Identity . "." . $Domain);
} else={
  :set Zone ("dhcp." . $Domain);
}
:local Ttl 5m;
:local CommentPrefix "managed by dhcp-to-dns for ";

:foreach DnsRecord in=[ / ip dns static find where comment ~ $CommentPrefix ] do={
  :local DnsRecordVal [ / ip dns static get $DnsRecord ];
  :local MacAddress [ $CharacterReplace ($DnsRecordVal->"comment") $CommentPrefix "" ];
  :if ([ / ip dhcp-server lease print count-only where mac-address=$MacAddress address=($DnsRecordVal->"address") dynamic=yes status=bound ] > 0) do={
    $LogPrintExit debug ("Lease for " . $MacAddress . " (" . $DnsRecordVal->"name" . ") still exists. Not deleting DNS entry.") false;
  } else={
    :local Found false;
    $LogPrintExit info ("Lease expired for " . $MacAddress . " (" . $DnsRecordVal->"name" . "), deleting DNS entry.") false;
    / ip dns static remove $DnsRecord;
  }
}

:foreach Lease in=[ / ip dhcp-server lease find where dynamic=yes status=bound ] do={
  :local LeaseVal [ / ip dhcp-server lease get $Lease ];
  :local Comment ($CommentPrefix . $LeaseVal->"mac-address");
  :local HostName [ $CharacterReplace ($LeaseVal->"host-name") " " "" ];
  :if ($HostName = "") do={
    :set HostName [ $CharacterReplace ($LeaseVal->"mac-address") ":" "-" ];
  }

  :local Fqdn ($HostName . "." . $Zone);
  :local DnsRecord [ / ip dns static find where name=$Fqdn ];
  :if ([ :len $DnsRecord ] > 0) do={
    :local DnsIp [ / ip dns static get $DnsRecord address ];

    :local DupMacLeases [ / ip dhcp-server lease find where mac-address=($LeaseVal->"mac-address") dynamic=yes status=bound ];
    :if ([ :len $DupMacLeases ] > 1) do={
      :set ($LeaseVal->"address") [ / ip dhcp-server lease get ($DupMacLeases->([ :len $DupMacLeases ] - 1)) address ];
    }

    :if ([ :len ($LeaseVal->"host-name") ] > 0) do={
      :set ($LeaseVal->"address") [ / ip dhcp-server lease get ([ find where host-name=($LeaseVal->"host-name") dynamic=yes status=bound ]->0) address ];
    }

    :if ($DnsIp = $LeaseVal->"address") do={
      $LogPrintExit debug ("DNS entry for " . $Fqdn . " does not need updating.") false;
    } else={
      $LogPrintExit info ("Replacing DNS entry for " . $Fqdn . ", new address is " . $LeaseVal->"address" . ".") false;
      / ip dns static set name=$Fqdn address=($LeaseVal->"address") ttl=$Ttl comment=$Comment $DnsRecord;
    }
  } else={
    $LogPrintExit info ("Adding new DNS entry for " . $Fqdn . ", address is " . $LeaseVal->"address" . ".") false;
    / ip dns static add name=$Fqdn address=($LeaseVal->"address") ttl=$Ttl comment=$Comment;
  }
}
