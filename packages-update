#!rsc
# RouterOS script: packages-update
# Copyright (c) 2019-2020 Christian Hesse <mail@eworm.de>
#
# download packages and reboot for installation

:global DownloadPackage;
:global LogPrintExit;
:global ScriptFromTerminal;
:global ScriptLock;

$ScriptLock "packages-update";

:local Update [ / system package update get ];

:if ([ :typeof ($Update->"latest-version") ] = "nothing") do={
  $LogPrintExit warning "Latest version is not known." true;
}

:if ($Update->"installed-version" = $Update->"latest-version") do={
  $LogPrintExit info ("Version " . $Update->"latest-version" . " is already installed.") true;
}

:foreach Package in=[ / system package find where !bundle ] do={
  :local PkgName [ / system package get $Package name ];
  if ([ $DownloadPackage $PkgName ($Update->"latest-version") ] = false) do={
    $LogPrintExit error ("Download for package " . $PkgName . " failed.") true;
  }
}

:foreach Script in=[ / system script find where name~"^(email|upload)-backup\$" ] do={
  / system script run $Script;
}

:if ([ $ScriptFromTerminal "packages-update" ] = true) do={
  :if (!([ /system resource get version ] ~ ($Update->"channel"))) do={
    :put "Update channel changed. Want to downgrade? [y/N]";
    :if ([ :terminal inkey timeout=60 ] = 121) do={
      :log info ("Rebooting for downgrade.");
      :delay 1s;
      / system package downgrade;
    }
  }

  :put "Do you want to (s)chedule reboot or (r)eboot now? [s/R]";
  :if ([ :terminal inkey timeout=60 ] = 115) do={
    / system scheduler add name="reboot-for-update" start-time=03:00:00 interval=1d \
        on-event=(":global RandomDelay; \$RandomDelay 3600; " . \
        "/ system scheduler remove reboot-for-update; / system reboot;");
    $LogPrintExit info ("Scheduled reboot for update between 03:00 and 04:00.") true;
  }
}

:log info ("Rebooting for update.");
:delay 1s;
/ system reboot;
